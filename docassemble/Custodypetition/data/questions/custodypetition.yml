---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
metadata:
  title: |
    Petition for Custody
  short title: |
    Petition for Custody
  tags:
    - ES-00-00-00-00
    - FA-00-00-00-00
  authors:
---
mandatory: True
comment: |
  Global interview metadata
variable name: interview_metadata["custodypetition"]
data:
  al_weaver_version: "1.7.0"
  generated on: "2022-11-25"
  title: >-
    Petition for Custody
  short title: >-
    Petition for Custody
  description: |-
    Custodypetition
  original_form: >-
    
  allowed courts: 
    - "District Court"
  categories:
    - "ES-00-00-00-00"
    - "FA-00-00-00-00"
  typical role: "plaintiff"
  generate download screen: True
---
code: |
  interview_metadata['main_interview_key'] =  'custodypetition'
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "LA"
---
code: |
      defendants[0].address_fields(show_county=True, country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
code: |
  github_repo_name =  'docassemble-Custodypetition'
---
code: |
  interview_short_title = "Ask the court for a change in custody"
---
code: |
  al_form_type = "starts_case" 
---
objects:
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - users_work: ALPeopleList.using(ask_number=True,target_number=1)
  - users_mailing: ALPeopleList.using(ask_number=True,target_number=1)
  #- defendant_work: ALPeopleList.using(ask_number=True,target_number=1)
  - defendant_serving: ALAddress
  - defendant_mailing: ALPeopleList.using(ask_number=True,target_number=1)
  - other_parties: ALPeopleList.using(ask_number=True,target_number=1)
  - other_caretaker: ALPeopleList.using(ask_number=True,target_number=1)
  - children: ALPeopleList.using(ask_number=True, target_number=number_of_children, complete_attribute="complete")
  - court_list: ALCourtLoader.using(file_name='JDCs_by_parish.xlsx')
---
code: |
  users.there_is_another = 0
---
sections:
  - review_custodypetition: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_custodypetition
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["custodypetition"]["allowed courts"]
  nav.set_section("review_custodypetition")
  user_role = "plaintiff"
  has_other_custody_orders
  if (has_other_custody_orders is True):
    stop_screen_custody_orders
  elif (dcfs_involved is True):
    stop_screen_dcfs
  elif (has_other_custody_orders is True and dcfs_involved is True):
    stop_screen_custody_orders_and_dcfs
  petitioner_will_waive_service
  if (petitioner_will_waive_service is False):
    service_location
  if (service_location == 'somewhere_else'):
    defendant_serving.address
    service_instructions
  users.gather()
  users[0].address.address
  petitioner_email
  other_parties.gather()
  other_parties[0].address.address
  number_of_children
  if number_of_children > 0:
    number_of_children = children.target_number
  else:
    stop_screen
  children.gather()
  primary_caregiver
  child_support_paid_or_pending
  petitioner_further_prays
  set_progress(25)
  trial_court
  trial_court_index
  if (petitioner_mailing is False):
    users_mailing[0].address.address
  if (defendant_mailing_address is False):
    defendant_mailing[0].address.address
  ability_to_pay_fees
  petitioners[0].signature
  set_progress(50)
  review_custodypetition
  interview_order_custodypetition = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  custodypetition_intro
  interview_order_custodypetition
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  custodypetition_download
---
code: |
  children[i].birthdate
  children[i].resides_with
  children[i].complete = True
---
id: children names without birthdate
sets:
  - children[i].name.first
  - children[i].name.last
  - children[i].name.middle
  - children[i].name.suffix
question: |
  % if hasattr(children, 'ask_number') and children.ask_number and children.target_number == 1:
  Child's information
  % else:
  Information of the **${ ordinal(i) }** child
  % endif
fields:
  - code: |
      children[i].name_fields()
  - Birthdate: children[i].birthdate
    datatype: BirthDate
---
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].name.middle
  - other_parties[i].name.suffix
id: names of opposing parties
question: |
  % if user_started_case:
  What is the name of the **defendant**?
  % else:
  What is the name of the ${ ordinal(i) } **plaintiff** or petitioner in this matter
  % endif
fields:
  - code: |
      other_parties[i].name_fields(person_or_business='person')
---
code: |
  other_parties.there_are_any = True
---
sets:
  - other_parties[0].address.address
  - other_parties[0].address.city
  - other_parties[0].address.county
  - other_parties[0].address.zip
  - other_parties[0].address.unit
  - other_parties[0].address.state
  - other_parties[0].address.country
id: persons address
generic object: ALIndividual
question: |
  What is ${ other_parties[0].possessive('address') }?
fields:
  - code: |
      other_parties[0].address_fields(show_county=True, country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
  - "Is this ${ other_parties[0].name.first }'s mailing address?": defendant_mailing_address
    datatype: yesnoradio
---
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.county
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
  - users[0].address.country
id: persons address
generic object: ALIndividual
question: |
  What is your address?
fields:
  - code: |
      users[0].address_fields(show_county=True, country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
  - "Would you like to use this as your mailing address?": petitioner_mailing
    datatype: yesnoradio
---
sets:
  - users_work[0].address.address
  - users_work[0].address.city
  - users_work[0].address.county
  - users_work[0].address.zip
  - users_work[0].address.unit
  - users_work[0].address.state
  - users_work[0].address.country
id: persons work address
question: |
  What is your work address?
fields:
  - code: |
      users_work[0].address_fields(show_county=True, country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: Petitioner Mailing Address
question: |
  What is your mailing address?
sets:
  - users_mailing[0].address.address
  - users_mailing[0].address.city
  - users_mailing[0].address.county
  - users_mailing[0].address.zip
  - users_mailing[0].address.unit
  - users_mailing[0].address.state
  - users_mailing[0].address.country
fields:
  - code: |
      users_mailing[0].address_fields(show_county=True, country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: Defendant Mailing Address
question: |
  What is the defendant's mailing address?
sets:
  - defendant_mailing[0].address.address
  - defendant_mailing[0].address.city
  - defendant_mailing[0].address.county
  - defendant_mailing[0].address.zip
  - defendant_mailing[0].address.unit
  - defendant_mailing[0].address.state
  - defendant_mailing[0].address.country
fields:
  - code: |
      defendant_mailing[0].address_fields(show_county=True, country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
#id: Defendant Work Address
#question: |
#  What is the defendant's work address?
#sets:
#  - defendant_work[0].address.address
#  - defendant_work[0].address.city
#  - defendant_work[0].address.county
#  - defendant_work[0].address.zip
#  - defendant_work[0].address.unit
#  - defendant_work[0].address.state
#  - defendant_work[0].address.country
#fields:
#  - code: |
#      defendant_work[0].address_fields(show_county=True, country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: Petition_for_Custody
continue button field: custodypetition_intro
question: |
  Petition for Custody
subquestion: |
  This interview is for establishing child custody, visitation, and/or support only, and they can only be used by the legal parents of the child(ren). 
  A child’s legal parents include the mother (who gave birth to the child) and the father who was either:
  
             (1) married to the mother at the time of birth
             (2) has established his “paternity” in court using
             (3) filed in Court an authentic “Acknowledgment of 
                 Paternity” after the child was born.
             
  Please note: ${ italic('These forms do not cover establishing who is a legal parent, and you will be filing your custody case as a “self-represented litigant”.') } 
---
id: petitioner contact information
question: |
  Contact Info
fields:
  - "What is your e-mail address?": petitioner_email
    datatype: email
    hint: |
      example@example.com
  - "What is your phone number?": petitioner_phone
    datatype: text
    hint: |
      (###)###-####
---
id: Qualifies to Continue
question: |
  Before we start...
fields:
  - "Are you aware of any other custody orders for these children(in Louisiana or any other state)?": has_other_custody_orders
    datatype: yesnoradio
  - "Has DCFS taken custody of the minor child(ren) in this case?": dcfs_involved
    datatype: yesnoradio
---
id: Child Support
question: |
  Petitioner Requests (Child Support)
fields:
  - "Is child support currently being paid or pending against the defendant?": child_support_paid_or_pending
    datatype: yesnoradio
  - "What is the docket number?": child_support_docket_number
    datatype: text
    show if: 
      variable: child_support_paid_or_pending
      is: True
  - "From the parish of...": parish_of_child_support_case
    code: |
      court_list.filter_courts(None)
    show if: 
      variable: child_support_paid_or_pending
      is: True
  - "Do you request for the defendant to pay child support since they are capable of earning sufficient funds?": requests_child_support
    datatype: yesnoradio
    show if:
      variable: child_support_paid_or_pending
      is: False
  - "Would you like to reserve the right to request child support in the future?": future_child_support
    datatype: yesnoradio
    show if:
      variable: requests_child_support
      is: False
---
id: Further Prays
question: |
  Court Costs
fields:
  - "Will you be able to pay the costs of this suit?": ability_to_pay_fees
    datatype: yesnoradio
  - "Would you like to file and prosecute ${ italic('in forma pauperis') }, where you will be granted all general and equitable relief?": forma_pauperis
    datatype: yesnoradio
    help: ${ italic('Forma pauperis') } is the ability to proceed in court without payment or usual fees associated with the lawsuit.
    show if: 
      variable: ability_to_pay_fees
      is: False
  - "How would like the court to assign court costs?": petitioner_further_prays
    input type: radio
    choices:
      - Petitioner be cast with the costs of these proceedings: petitioner_cast_with_costs
      - Defendant be cast with the costs of these proceedings: defendant_cast_with_costs
      - The parties share the costs of these proceedings in equal amounts: share_costs
      - Each party bears their own court costs and attorney’s fees: bears_own_costs
---
id: Petitioner Defendant Relationship
question: |
  Petitioner-Defendant Relationship
fields:
  - "How many children are between the defendant and yourself?": number_of_children
    datatype: integer
  - "Which of these describes your relationship with the defendant?": petitioner_defendant_relationship
    input type: radio
    choices:
      - We were in an intimate relationship: intimate_relationship
      - We were married but physically separated: physically_separated
      - We filed for a divorce: divorce_filed
      - We were divorced by signed judgment: divorce_signed
  - "What is the date of being officially physically separated?": date_of_physical_separation
    datatype: date
    show if: 
      variable: petitioner_defendant_relationship
      is: physically_separated
  - "Which parish was this divorce filed?": divorce_parish
    code: |
      court_list.filter_courts(None)
    show if:
      variable: petitioner_defendant_relationship
      is: divorce_filed
  - "What was the docket number?": divorce_docket
    datatype: text
    show if: 
      variable: petitioner_defendant_relationship
      is: divorce_filed
  - "When was the judgment signed?": date_of_divorce_signed
    datatype: date
    show if:
      variable: petitioner_defendant_relationship
      is: divorce_signed
---
id: Serving your custody papers
question: |
  Will ${ defendants[0].name.first } waive service of process and accept the custody papers from you directly?
subquestion: |
  The law requires that ${ defendants[0].name.first } be notified of your custody lawsuit through a process called "service".
 
  If you and ${ defendants[0].name.first } agree on the custody arrangements and are on speaking terms, they can accept the papers directly from you and sign an affidavit ${ italic('(a written statement or oath that clarifies the truth)') } in front of a notary saying they received them from you. This can save time and money.
 
  If ${ defendants[0].name.first } won't accept the papers, that's ok. You can serve them through the regular service process.
fields:
  - "Will ${ defendants[0].name.first } waive and accept service?": petitioner_will_waive_service
    datatype: yesnoradio
---
question: |
  Where will you have ${ defendants[0].name.first } served?
fields:
  - no label: service_location
    input type: radio
    choices:
      - Home: home
      - Somewhere else: somewhere_else
---
id: service address
generic object: ALAddress
sets:
  - defendant_serving.address
  - defendant_serving.city
  - defendant_serving.zip
  - defendant_serving.unit
  - defendant_serving.state
  - defendant_serving.country
question: |
  At what address should the sheriff attempt service on ${ defendants[0].name.first }?
subquestion: |
  Since this is not their home address, ${ defendants[0].name.first } will need to be served personally. Make sure this is somewhere they can be found to avoid extra costs for service attempts.
fields:
  - code: |
      defendant_serving.address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
---
id: service times
question: |
  What are the best days and times to attempt service on ${ defendants[0].name.first }?
fields:
  no label: service_instructions
---
id: who the children reside 
question: |
  Who does ${ children[i].name.full() } reside with?
  
fields:
  - Somebody already mentioned: children[i].resides_with
    datatype: radio
    choices: 
      - ${ defendants[0].name.full() }
      - ${ petitioners[0].name.full() }
      - Other
  - First Name: other_caretaker[i].name.first
    show if:
      variable: children[i].resides_with
      is: Other
  - Middle Name: other_caretaker[i].name.middle
    required: False
    show if:
      variable: children[i].resides_with
      is: Other
  - Last Name: other_caretaker[i].name.last
    show if:
      variable: children[i].resides_with
      is: Other
  - Suffix: other_caretaker[i].name.suffix
    required: False
    code: name_suffix()
    show if:
      variable: children[i].resides_with
      is: Other
  - "Has ${ children[i].name.first } resided with them for the past six months?": children[i].six_months_residence
    datatype: yesnoradio
  - "Why?": children[i].why_six_months
    required: False
    show if:
      variable: children[i].six_months_residence
      is: True
---
code: |
  if children[i].resides_with == "Other":
    children[i].resides_with == other_caretaker[i].name.full
---
id: Petitioner Requests
question: |
  Petitioner's Request
fields:
  - Somebody already mentioned: primary_caregiver
    datatype: radio
    choices: 
      - ${ defendants[0].name.full() }
      - ${ petitioners[0].name.full() }
  - "What are your reasons for this person to have parent/sole custody?": reason_for_primary_caregiver
    input type: area
    hint: |
      I request this person to have custody because...
  
  - "What type of custody do you want to have?": sole_or_joint
    datatype: radio
    choices:
      - Sole
      - Joint
---
id: Filing Option
question: |
  Filing Your Case
fields:
  - "In what parish would you like to file your petition?": trial_court_index
    code: |
      court_list.filter_courts(None)
  - "Why is this the right place to file?": venue_options
    datatype: checkboxes
    choices:
      - This court is in the parish where a party is domiciled.
      - This court is in the parish of the last matrimonial domicile.
---    
code: |
  trial_court = court_list.as_court('trial_court', trial_court_index[0])
---
progress: 100
question: |
  Sorry, you cannot proceed with this interview.
subquestion: |
  Since there are custody orders for the child(ren) you are trying to petition for, you will instead have to petition for a modification of custody. This petition is for starting a new case for custody, where as you will be responding to a previous judgment. There are two types of judgments: 1) **Consensual**- an agreement between parties where they both settle/compromise on an arrangement and 2) **Considered**- a judge's decision that depends on presented evidence during the trial.
  
  **Steps To Modify Child Custody:**
    
    1. Seek qualification status
    2. Determine which court to file in (in the parish of the child's residency          or where the prior judgment was rendered)
    3. If possible, attempt negotiation with the other parent
    4. File petition
    5. Serve the other party
    6. Attend court hearing
buttons:
  - Exit: exit
  - Restart: restart
event: stop_screen_custody_orders
---
progress: 100
question: |
  Sorry, you cannot proceed with this interview.
subquestion: |
  You are unable to use this form if DCFS has taken custody of the child you are seeking custody for. In those cases, the court must decide if the child stays in foster care, goes home with the parent, or is placed in the custody of a relative through the "Child In Need Of Care" process.
  
  [Learn more about the "Child In Need Of Care" process](https://louisianalawhelp.org/resource/what-you-need-to-know-about-child-in-need-of-care-cases-in-louisiana-guide)

buttons:
  - Exit: exit
  - Restart: restart
event: stop_screen_dcfs
---
id: preview custodypetition
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_custodypetition'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: custodypetition_preview_question    
---
code: |
  signature_fields = []
---
code: |
  judicial_district = DAEmpty()
---
code: |
 name = DAEmpty()
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  addresses_to_search = [user.address for user in users]
---
id: custodypetition review screen
event: review_custodypetition
question: |
  Review your answers
review:
  - Edit: users[0].name.first
    button: |
      **Your name:**
      ${ users[0].name.full() }
  - Edit: users[0].address.address
    button: |
      **Your address:**
      ${ users[0].address.address }, ${ users[0].address.city }, ${ users[0].address.state }, ${ users[0].address.zip }
  - Edit: petitioner_email
    button: |
      **Your email:**
      ${ petitioner_email }
  - Edit: other_parties[0].name.first
    button: |
      **Defendant's name:**
      ${ other_parties[0].name.full() }
  - Edit: other_parties[0].address.address
    button: |
      **Defendant's address:**
      ${ other_parties[0].address.address }
  - Edit: defendant_serving.address.address
    button: |
      **Where to serve the defendant?**
      % if service_location == "home":
        ${ other_parties[0].address.address }, ${ other_parties[0].address.city }, ${ other_parties[0].address.state }, ${ other_parties[0].address.zip }
      % elif service_location == "somewhere_else":
        ${ defendant_serving.address.address }, ${ defendant_serving.address.city }, ${ defendant_serving.address.state }, ${ defendant_serving.address.zip }
      % endif
  - Edit: service_instructions
    button: |
      **Best time to serve:**
      ${ service_instructions }
  - Edit: children.revisit
    button: |
      **Children:**

      % for item in children:
        ${ item } who resides with ${ item.resides_with }
        
      % endfor
  - Edit: primary_caregiver.revisit
    button: |
      **Primary caregiver**

      % for item in primary_caregiver:
        * ${ item }
      % endfor
  - Edit: reason_for_primary_caregiver
    button: |
      **Reason for ${ primary_caregiver } deserve custody:**
      ${ reason_for_primary_caregiver }
  - Edit: sole_or_joint
    button: |
      **Sole custody or Joint custody?**:
      ${ sole_or_joint }  
  - Edit: trial_court_index
    button: |
      **Parish to file**:
      ${ trial_court.name } Parish
  - Edit: petitioner_mailing
    button: |
      **Your mailing address:**
      % if petitioner_mailing == True:
        ${ users[0].address.address }, ${ users[0].address.city }, ${ users[0].address.state }, ${ users[0].address.zip }
      % elif petitioner_mailing == False:
        ${ users_mailing[0].address.address }, ${ users_mailing[0].address.city }, ${ users_mailing[0].address.state }, ${ users_mailing[0].address.zip }
      % endif
  - Edit: defendant_mailing
    button: |
      **Defendant's mailing address:**
      % if defendant_mailing_address == True:
        ${ other_parties[0].address.address }, ${ other_parties[0].address.city }, ${ other_parties[0].address.state }, ${ other_parties[0].address.zip }
      % elif defendant_mailing_address == False:
        ${ defendant_mailing[0].address.address }, ${ defendant_mailing[0].address.city }, ${ defendant_mailing[0].address.state }, ${ defendant_mailing[0].address.zip }
       % endif
---
continue button field: primary_caregiver.revisit
question: |
  Edit primary_caregiver
subquestion: |
  ${ primary_caregiver.table }

  ${ primary_caregiver.add_action() }
---
table: primary_caregiver.table
rows: primary_caregiver
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: children.revisit
question: |
  Edit children
subquestion: |
  ${ children.table }

  ${ children.add_action() }
---
table: children.table
rows: children
columns:
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - birthdate
  - name.first
confirm: True

---
continue button field: who_the_child_resides_with.revisit
question: |
  Edit who_the_child_resides_with
subquestion: |
  ${ who_the_child_resides_with.table }

  ${ who_the_child_resides_with.add_action() }
---
table: who_the_child_resides_with.table
rows: who_the_child_resides_with
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: petitioners.revisit
question: |
  Edit petitioners
subquestion: |
  ${ petitioners.table }

  ${ petitioners.add_action() }
---
table: petitioners.table
rows: petitioners
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
id: download custodypetition
event: custodypetition_download
question: |
  All done
subquestion: |
  Thank you ${petitioners}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_custodypetition'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - custodypetition_Post_interview_instructions: ALDocument.using(title="Instructions", filename="custodypetition_next_steps.docx", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
  - custodypetition_attachment: ALDocument.using(title="Petition for Custody", filename="custodypetition", enabled=True, has_addendum=False, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[custodypetition_Post_interview_instructions, custodypetition_attachment], filename="custodypetition", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[custodypetition_attachment],  filename="custodypetition", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachments:
  - name: Post-interview-Instructions
    filename: custodypetition_next_steps
    docx template file: custodypetition_next_steps.docx
    variable name: custodypetition_Post_interview_instructions[i]
  - name: custodypetition
    filename: custodypetition
    variable name: custodypetition_attachment[i]
    skip undefined: True
    docx template file: custodypetition.docx
    fields:
      - "name": ${ trial_court.name }
      - "judicial_district": ${ trial_court.judicial_district }
      - "district_attorney": ${ trial_court.district_attorney }


